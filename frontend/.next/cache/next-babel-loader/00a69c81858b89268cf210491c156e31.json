{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\reactJS\\\\statsbomb\\\\frontend\\\\components\\\\Matches.js\";\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/client';\nimport Match from './Match';\nimport gql from \"graphql-tag\";\nimport { perPage } from '../config';\nexport const ALL_PLAYERS_QUERY = gql`\n    query ALL_PLAYERS_QUERY($skip: Int = 0, $first: Int) {\n        allPlayers(first: $first, skip: $skip){\n            id\n            player_name\n            country_name\n            player_birth_date\n            photo {\n                id\n                image {\n                publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\nconst Center = styled.div.withConfig({\n  displayName: \"Matches__Center\",\n  componentId: \"i6ge45-0\"\n})([\"text-align:center;.buttonup{width:auto;color:white;background-color:\", \";border:0;border-radius:\", \" !important;font-size:1rem;padding:0.9rem 1.2rem;}\"], props => props.theme.orange, props => props.theme.roundedCorner);\nconst ItemsList = styled.div.withConfig({\n  displayName: \"Matches__ItemsList\",\n  componentId: \"i6ge45-1\"\n})([\"display:grid;grid-template-columns:auto auto auto auto;grid-gap:60px;max-width:\", \";margin:0 auto;@media (max-width:830px){grid-template-columns:1fr 1fr;grid-gap:0%;a{font-size:1.2rem;}}@media (max-width:500px){grid-template-columns:1fr;grid-gap:0%;}\"], props => props.theme.maxWidth);\nexport default function Matches({\n  page\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PLAYERS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  });\n  console.log(data, error, loading);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(ItemsList, {\n      children: data.allPlayers.map(match => /*#__PURE__*/_jsxDEV(Match, {\n        match: match\n      }, match.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Michael/Documents/reactJS/statsbomb/frontend/components/Matches.js"],"names":["styled","useQuery","Match","gql","perPage","ALL_PLAYERS_QUERY","Center","div","props","theme","orange","roundedCorner","ItemsList","maxWidth","Matches","page","data","error","loading","variables","skip","first","console","log","message","allPlayers","map","match","id"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,iBAAiB,GAAGF,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfO;AAiBP,MAAMG,MAAM,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,+JAMaC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MANlC,EAQUF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,aAR/B,CAAZ;AAcA,MAAMC,SAAS,GAAGZ,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,mQAIDC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYI,QAJpB,CAAf;AAmBA,eAAe,SAASC,OAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AACvC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BjB,QAAQ,CAACI,iBAAD,EAAoB;AACzDc,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEL,IAAI,GAAGX,OAAP,GAAiBA,OADhB;AAEPiB,MAAAA,KAAK,EAAEjB;AAFA;AAD8C,GAApB,CAAzC;AAMAkB,EAAAA,OAAO,CAACC,GAAR,CAAaP,IAAb,EAAmBC,KAAnB,EAA0BC,OAA1B;AACA,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACO,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,SAAD;AAAA,gBACKR,IAAI,CAACS,UAAL,CAAgBC,GAAhB,CAAqBC,KAAD,iBACjB,QAAC,KAAD;AAAsB,QAAA,KAAK,EAAEA;AAA7B,SAAYA,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH","sourcesContent":["import styled from 'styled-components';\r\nimport { useQuery } from '@apollo/client';\r\nimport Match from './Match';\r\nimport gql from \"graphql-tag\";\r\nimport { perPage } from '../config';\r\n\r\nexport const ALL_PLAYERS_QUERY = gql`\r\n    query ALL_PLAYERS_QUERY($skip: Int = 0, $first: Int) {\r\n        allPlayers(first: $first, skip: $skip){\r\n            id\r\n            player_name\r\n            country_name\r\n            player_birth_date\r\n            photo {\r\n                id\r\n                image {\r\n                publicUrlTransformed\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Center = styled.div`\r\n\ttext-align: center;\r\n\r\n\t.buttonup {\r\n\t    width: auto;\r\n\t    color: white;\r\n\t    background-color: ${props => props.theme.orange};\r\n\t    border: 0;\r\n\t    border-radius: ${props => props.theme.roundedCorner} !important;\r\n\t    font-size: 1rem;\r\n\t    padding: 0.9rem 1.2rem;\r\n  \t}\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: auto auto auto auto;\r\n\tgrid-gap: 60px;\r\n\tmax-width: ${props => props.theme.maxWidth};\r\n\tmargin: 0 auto;\r\n\t@media (max-width: 830px) {\r\n\t\tgrid-template-columns: 1fr 1fr;\r\n\t\tgrid-gap: 0%;\r\n\t\ta {\r\n    \t\tfont-size: 1.2rem;\r\n\t\t}\r\n\t}\r\n\t@media (max-width: 500px) {\r\n\t\tgrid-template-columns: 1fr;\r\n\t\tgrid-gap: 0%;\r\n\t}\r\n`;\r\n\r\nexport default function Matches ({ page }) {\r\n    const { data, error, loading } = useQuery(ALL_PLAYERS_QUERY, {\r\n        variables: {\r\n            skip: page * perPage - perPage,\r\n            first: perPage,\r\n        },\r\n    });\r\n    console.log( data, error, loading )\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error.message}</p>;\r\n    return (\r\n        <Center>\r\n            <ItemsList>\r\n                {data.allPlayers.map((match) => (\r\n                    <Match key={match.id} match={match} />\r\n                ))}\r\n            </ItemsList>\r\n        </Center>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}